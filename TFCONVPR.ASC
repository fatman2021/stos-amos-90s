10 rem this is a processor of files..
20 rem R=replace string 1 with string 2
30 rem "blah" = string
40 rem inside string, use '+xxx ' including space to represent additional info
50 rem eg; '++' = plus, '+q' or '+Q ' to represent quote mark (")
60 rem  also '+13' to represent character 13, always include space
100 rem other command summary:
110 rem pxxxx = position cursor at 000=start +nnn= forward x characters
120 rem p-0 = position at end (last character+1)
130 rem p-nnn = go backward by nnn characters
140 rem f "blah" (and place cursor at current position)
150 rem i "blah" (at current cursor position)
200 rem extended command set
210 rem v0=nnn or v0=C   Variable 0 is set to nnn or current cursor position
220 rem C=vn  Set current cursor position to vn
230 rem v0 also can be upto v9
240 rem d "blah" = information about the file ie; ignore, used for user
250 rem s$ "blah" or s$=v0 {to} {c} sets string to "blah",
260 rem else sets string to the range of bytes starting at v0, ending at currnt cursor position
270 rem options to and c are optional and do not affect the command's function
280 rem this can be used anywhere "blah" appears in the command description
300 rem extra options... continued
310 rem e "ext" - preferred extension for the finished file
320 rem p nnn - typical increase or decrease in % or absolute terms:
330 rem eg; p +200 +20% = adds 20% to original no of bytes, and 200 ontop of that (typically a header)
340 rem ..if statement?.. goto label:
350 rem dialog "extras necessary|always occurring |yes/no/always|R"
360 rem before starting, display R for radiobutton, c for check boxes, harry is name of variable to put info into, for later if statement
400 rem other thoughts:
410 rem search for "+a " etc... and put into v0
420 rem +l = any lowercase
430 rem +u = any uppercase
440 rem +o...... = options as follows (1=select 0=don't include)
450 rem +o000001 = lowecase
460 rem +o000010 = uppercase
470 rem +o000100 = numeric
480 rem +o001000 = any non space (33-127)
490 rem +o010000 = anything 128-256
500 rem +o100000 = any 13 or linefeed.
510 rem -o.... = options as before but 1=select against
520 rem eg; -o011000 = select anything under 33
530 rem combinations:
540 rem +~(nnn,nnm)&(nno,nnp) ie; ~= not, ','=or, &=and, starting a + with a bracket or other symbol means do this clever processing
550 rem eg; +13,10,32,8 = search for any of space, return, tab etc.
560 rem eg; +o000100,'+','-','.' look for any number or number starter.
1000 rem General form of the program:
1010 rem Choose file (or use clipboard file)
1020 rem load it up, and reserve memory for a doubling in size or all available memory, whichever is smallest
1030 rem reserve 2k for tables of where stuff was found..
1040 rem choose a 'replacer' file
1050 rem input each line of the replacer file one byte at a time into the command processor
1060 rem and output the finished file
1100 rem selected options:
1110 rem replace all y with x..
1120 rem phase 1 - determine how much room will be required,
1130 rem  (search thru to find no of occurances, mult by size of replace)
1140 rem phase 3 (2 may be to allocate memory)
1150 rem   - do the actual moving and inserting of characters, may be slo
1160 rem   - therefore a % bar may be appropriate.
1170 rem return
