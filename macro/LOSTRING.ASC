10 rem
40 show on 
50 EXT$="*.txt"
60 key off 
100 rem open file
110 rem load into memory and be ready for 100% increase
120 F$=file select$("*.doc","Convert this file:")
150 PE=val(mid$(dir first$(F$,-1),13,8))
155 PU=PE*2+1000
158 O=free : if O<put HENPU=O-1000 : if PU<PE then gosub 700
160 reserve as work 5,PU : BEGTXT=start(5) : bload F$,5 : FINTXT=BEGTXT+PE-1 : FINBLK=BEGTXT+PU : C=BEGTXT : rem one byte past reserved area.
200 rem open bitinput file
210 J$=file select$("*.mac","choose a processor:")
220 open in #1,J$
230 repeat 
240 I$=input$(#1,1)
250 if eof(#1)=0 then gosub 1000
260 until eof(#1)
270 close #1
300 I$=file select$(EXT$,"converted file will be saved as:")
305 if I$="" then print "bad filename" : goto 330
310 bsave I$,BEGTXT to FINTXT
320 end 
330 print "press Q or ESC to quit, R to choose another filename or any other key to restart"
340 repeat : I$=inkey$ : until I$<>""
350 if I$="r" or I$="R" then goto 300
360 if I$<>"q" and I$<>"Q" and I$<>chr$(27) then goto 10
390 end 
700 print "!!! not enough memory to process file !!!"
710 print "press Q or ESC to quit or any other key to rechoose"
720 repeat : I$=inkey$ : until I$<>""
730 if I$="Q" or I$=chr$(27) or I$="q" then end 
740 goto 10
990 rem 999 - input character into i$, leave blank if end of file
999 I$=input$(#1,1) : return 
1000 if I$="r" or I$="R" then gosub 2000 : I$=""
1010 if I$="i" or I$="I" then gosub 3000 : I$=""
1015 if I$="*" then gosub 2500
1020 if I$="f" or I$="F" then gosub 4500 : I$=""
1030 if I$="p" or I$="P" then gosub 4000 : I$=""
1040 if I$<" " then NL=1 : return 
1050 return 
2000 rem find & replace
2010 A$="" : gosub 3500 : F$=A$ : A$="" : gosub 3500 : G$=A$
2015 print "Replacing ";asc(F$);" with ";asc(G$);
2020 rem find f$ in main
2025 C=BEGTXT : N=0
2026 J=len(G$)-len(F$) : if J=0 then print " swapping bytes..";
2027 if J<0 then print " moving memory backward.. ";
2028 if J>0 then print " moving memory forward..";
2029 repeat 
2030 X=hunt(C to FINTXT,F$)
2035 if X>0 then C=X : inc N : print "."; : gosub 2050 : C=C+J+len(F$)
2040 until X=0 : print " Total ";N;" found." : return 
2050 rem move earth to fit in the new..
2070 if J<>0 then gosub 2200
2080 gosub 3100
2090 return 
2200 rem prep insert of j characters at c
2210 rem if j is negative, then remove j characters, from c forward.
2220 rem check sense first
2240 if J>0 and FINTXT+J>FINBLK then print "no room for insert!" : return 
2250 if J<0 and FINTXT-BEGTXT<J then print "what!?! not enough letters exist to be removed!!!" : return 
2260 if J<0 then gosub 2300 else gosub 2400
2270 rem print "move done.."
2280 return 
2300 rem move backward..
2310 DEST=C : for SO=C-J to FINTXT : poke DEST,peek(SO) : inc DEST : next SO : FINTXT=FINTXT+J
2320 return 
2400 FINTXT=FINTXT+J : DEST=FINTXT : for SO=FINTXT-J to C step-1 : poke DEST,peek(SO) : dec DEST : next SO
2410 return 
2500 rem get characrters until newline
2505 print "comment: ";
2510 repeat : gosub 999
2520 if I$>=" " then print I$;
2599 until I$<" " : print : return 
3000 A$="" : gosub 3500 : G$=A$
3010 J=len(G$) : gosub 2200
3020 gosub 3100 : return 
3100 for T=0 to len(G$)-1
3110 poke C+T,asc(mid$(G$,T+1,1))
3120 next T
3130 return 
3500 rem process string..
3510 MD=0
3520 repeat : gosub 999 : until I$=chr$(34) : MD=1
3530 repeat 
3540 gosub 999
3550 if I$<" " then MD=9 : print "unexpected illegal character before end of quote"
3561 if MD=4 and I$="," then A$=A$+Q$ : MD=2 : I$=""
3562 if MD=2 and I$=" " then print "error - use '++ ' to represent '+'."
3563 if MD=4 and I$=" " then A$=A$+Q$ : MD=1 : I$=""
3564 if MD=3 and I$=" " then gosub 3900 : MD=1
3565 if MD=3 and I$="," then gosub 3900 : MD=2
3567 if MD=2 and I$="+" then Q$="+" : MD=4
3568 if MD=2 and (I$="q" or I$="Q") then Q$=chr$(34) : MD=4
3569 if I$="+" and MD=1 then MD=2 : P$="" : Q$=""
3570 if MD=1 and I$<>chr$(34) then A$=A$+I$
3580 if (MD=2 or MD=3) and I$>="0" and I$<="9" then P$=P$+I$ : MD=3
3590 until I$=chr$(34)
3595 if MD<>1 then print "error - command unfinished!"
3598 return 
3600 rem mode 1 -normal text
3610 rem mode 2 -about to process a q or + or nnn etc
3620 rem mode 3 -just processing a number, still to input
3630 rem mode 4 -just processed a letter, still to input
3640 rem commas following letters and numbers separate final characters
3650 rem eg; "+002,005,090,123,q,+,040 sdfsdf"
3900 if val(P$)>255 then print "error - too many numbers in the commandline.." : P$=right$(P$,1)
3905 A$=A$+chr$(val(P$)) : I$="" : P$=""
3910 return 
4000 rem position cursor...
4005 MD=1
4009 repeat 
4010 gosub 999
4015 if I$>="0" and I$<="9" and MD>1 then P$=P$+I$
4020 if I$="+" and MD=1 then MD=2 : P$=I$
4030 if I$="-" and MD=1 then MD=3 : P$=I$
4035 if I$<" " and MD=1 then print "unexpected end of position command!"
4040 if I$>="0" and I$<="9" and MD=1 then MD=4 : P$=I$
4050 if (I$<=" " or I$=",") and MD<>1 then gosub 4100 : MD=0
4070 until MD=0
4080 return 
4100 rem process data
4105 OC=C
4110 V=val(P$)
4120 if V=0 and MD=2 then C=BEGTXT
4125 if V=0 and MD=3 then C=FINTXT+1
4130 if V>=0 and MD=4 then C=BEGTXT+V
4140 if V<>0 and MD=2 then C=C+V
4150 if V<>0 and MD=3 then C=C+V
4170 if (C<BEGTXT) or (C>FINTXT) then print "outside range" : C=OC
4180 print "cursor was at ";OC-BEGTXT : print "cursor is now at ";C-BEGTXT
4190 return 
4500 A$="" : gosub 3500 : F$=A$
4510 X=hunt(C to FINTXT,F$) : if X>0 then C=X
4520 return 
9999 print hunt(BEGTXT to FINTXT,"a")
